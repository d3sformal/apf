// Callsite of ThreadGroup.add
// Track these to allow precise exception handling
[assume post method java.lang.Class.desiredAssertionStatus]
return = 1

[method java.lang.Thread.<init>]
group = null
group.destroyed = 0

this.group = cur.group
cur.group.destroyed = 0

// Transfer group.destroyed knowledge over this getter
[method java.lang.Thread.getThreadGroup]
this.group.destroyed = 0
return = this.group

[object java.lang.ThreadGroup]
this.nthreads = 0

// Track these to allow precise exception handling
[method java.lang.ThreadGroup.add]
cur.destroyed = 0
this.destroyed = 0
this.nthreads < alength(arrlen, nt)
this.nthreads + 1 = alength(arrlen, nt)
this.threads = nt

[assume pre method java.lang.ThreadGroup.add]
this.nthreads = #THREADS
// this.nthreads >= 0
this.nthreads < alength(arrlen, this.threads)

// Assume that current thread cannot be destroyed
[assume post method java.lang.Thread.currentThread]
return.group.destroyed = 0

[object java.util.Vector]
// local_0 is this
local_0.elementCount > 0

[method java.util.Vector.<init>]
// initialCapacity >= 0
local_1 >= 0

[assume post method java.util.Vector.iterator]
return.this$0 = local_0
return.counter = 0

[assume pre method java.util.Vector.grow]
local_1 >= 0
local_1 < 2147483639
alength(arrlen, local_0.elementData) + this.capacityIncrement < 2147483639
2 * alength(arrlen, local_0.elementData) < 2147483639

[method java.util.Vector.grow]
local_2 + local_0.capacityIncrement < 2147483639
2 * local_2 < 2147483639

local_3 < 2147483639

[assume pre method java.util.Vector.elementAt]
local_1 < local_0.elementCount

[assume pre method java.util.Vector.elementData]
local_1 >= 0
local_1 < alength(arrlen, local_0.elementData)

[object java.util.Vector$Itr]
// local_0 is this
local_0.this$0.elementCount > 0
local_0.cursor < local_0.this$0.elementCount
local_0.cursor = local_0.this$0.elementCount

[assume pre method java.util.Vector$Itr.checkForComodification]
local_0.this$0.modCount = local_0.expectedModCount

[assume pre method java.util.Vector$Itr.next]
local_0.cursor < local_0.this$0.elementCount

[method java.util.Vector$Itr.next]
local_0.cursor = local_2
